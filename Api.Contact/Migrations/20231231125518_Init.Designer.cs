// <auto-generated />
using System;
using Api.Contact.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Contact.Migrations
{
    [DbContext(typeof(ApiContactContext))]
    [Migration("20231231125518_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Api.Contact.Models.Contacto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Contacto");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3c1d434-ba7e-4fc9-be72-dbdd3901bd09"),
                            Apellido = "Young",
                            Celular = "+593963689656",
                            CreatedAt = new DateTime(2023, 12, 31, 7, 55, 17, 402, DateTimeKind.Local).AddTicks(8081),
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            Deleted = false,
                            Enabled = true,
                            Nombre = "Alaska",
                            Telefono = "02609639",
                            UsuarioId = new Guid("43aeeeda-9961-4047-9a6c-fb40aed780cc")
                        },
                        new
                        {
                            Id = new Guid("1489cbe9-d763-434e-ba9e-1149555e35db"),
                            Apellido = "Tigua",
                            Celular = "+593977689656",
                            CreatedAt = new DateTime(2023, 12, 31, 7, 55, 17, 402, DateTimeKind.Local).AddTicks(8118),
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            Deleted = false,
                            Enabled = true,
                            Nombre = "Danna",
                            Telefono = "02607739",
                            UsuarioId = new Guid("1128630a-da70-4242-8a56-ff0b7d38dc1d")
                        },
                        new
                        {
                            Id = new Guid("52a69d0a-3017-42c2-ad61-0a89237ce452"),
                            Apellido = "Castro",
                            Celular = "+593964489656",
                            CreatedAt = new DateTime(2023, 12, 31, 7, 55, 17, 402, DateTimeKind.Local).AddTicks(8123),
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            Deleted = false,
                            Enabled = true,
                            Nombre = "Milena",
                            Telefono = "02688639",
                            UsuarioId = new Guid("5ef58fa0-e108-4d8c-aa1e-8640813deb15")
                        });
                });

            modelBuilder.Entity("Api.Contact.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = new Guid("43aeeeda-9961-4047-9a6c-fb40aed780cc"),
                            CreatedAt = new DateTime(2023, 12, 31, 7, 55, 17, 403, DateTimeKind.Local).AddTicks(1452),
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            Deleted = false,
                            Enabled = true,
                            Password = "0598BF5B847F0297328C2F6F77CEC86C41DF1AD704FCE9B429CAC28019FEA76B",
                            User = "ayoung"
                        },
                        new
                        {
                            Id = new Guid("1128630a-da70-4242-8a56-ff0b7d38dc1d"),
                            CreatedAt = new DateTime(2023, 12, 31, 7, 55, 17, 403, DateTimeKind.Local).AddTicks(1466),
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            Deleted = false,
                            Enabled = true,
                            Password = "1EC565DA06E86121A4FA61DFA4627AF44CB2B6C949EB208859AA42D2DD76A343",
                            User = "dtigua"
                        },
                        new
                        {
                            Id = new Guid("5ef58fa0-e108-4d8c-aa1e-8640813deb15"),
                            CreatedAt = new DateTime(2023, 12, 31, 7, 55, 17, 403, DateTimeKind.Local).AddTicks(1469),
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            Deleted = false,
                            Enabled = true,
                            Password = "2D0BB132CDF675AB1EC10806D332A85E9AEF84C4F73A2214D5318BC6C5905210",
                            User = "mcastro"
                        });
                });

            modelBuilder.Entity("Api.Contact.Models.Contacto", b =>
                {
                    b.HasOne("Api.Contact.Models.Usuario", "Usuario")
                        .WithMany("Contacto")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Api.Contact.Models.Usuario", b =>
                {
                    b.Navigation("Contacto");
                });
#pragma warning restore 612, 618
        }
    }
}
